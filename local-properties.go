// Generate local.properties file for your android project
// Because copying the existing one takes more time.
package main

import (
	"fmt"
	"os"
)

var template = `## This file is automatically generated by Android Studio.
# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
#
# This file should *NOT* be checked into Version Control Systems,
# as it contains information specific to your local configuration.
#
# Location of the SDK. This is only used by Gradle.
# For customization when using a Version Control System, please read the
# header note.
%s
`

const fileName = "local.properties"

func main() {
	// Let's get androidHome variable first
	androidHome := os.Getenv("androidHome")

	// Check if the variable is empty
	if androidHome == "" {
		fmt.Println("androidHome not found. Please set up androidHome environment variable first.")
	} else {
		// append it to the sdk.dir
		sdkPath := fmt.Sprintf("sdk.dir=%s", androidHome)

		// if the local.properties file exists, ask whether to overwrite it or not
		if exists(fileName) {
			fmt.Println("There's an existing local.properties file. Do you want to overwrite it ? Y/N")
			var text string
			fmt.Scanf("%s", &text)
			if text == "Y" {
				writePathToFile(sdkPath)
			} else {
				fmt.Println("Didn't do anything")
			}
		} else {
			writePathToFile(sdkPath)
		}
	}
}

// write sdk.dir path to the end of tempate
// and write as a file
func writePathToFile(path string) {
	file, err := os.Create("local.properties")
	panicIf(err)
	file.WriteString(fmt.Sprintf(template, path))
	file.Sync()
	fmt.Println("Done!")
}

// From http://stackoverflow.com/a/12527546/2438460
// Exists reports whether the named file or directory exists.
func exists(name string) bool {
	if _, err := os.Stat(name); err != nil {
		if os.IsNotExist(err) {
			return false
		}
	}
	return true
}

// standard error check
func panicIf(err error) {
	if err != nil {
		panic(err)
	}
}
